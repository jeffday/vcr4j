/*
 * @(#)VCREjectButton.java   2009.02.24 at 09:44:54 PST
 *
 * Copyright 2007 MBARI
 *
 * Licensed under the GNU LESSER GENERAL PUBLIC LICENSE, Version 2.1
 * (the "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 * http://www.gnu.org/copyleft/lesser.html
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */



/* Generated by Together */
package org.mbari.vcr4j.ui.swing;

import javafx.beans.property.ObjectProperty;
import org.mbari.vcr4j.VideoController;
import org.mbari.vcr4j.VideoError;
import org.mbari.vcr4j.VideoState;
import org.mbari.vcr4j.rs422.commands.RS422VideoCommands;

import java.util.Optional;

/**
 * <p>Eject button for used for the VCR UI</p>
 *
 * @author  : $Author: hohonuuli $
 * @version : $Revision: 3 $
 */
public class VCREjectButton extends VCRButton {


    public VCREjectButton(ObjectProperty<VideoController<? extends VideoState, ? extends VideoError>> videoController) {
        super(videoController);
        setOnIcon("/images/vcr/eject_r.png");
        setOffIcon("/images/vcr/eject.png");
        setToolTipText("Eject");
    }

    /**
     * <p><!-- Method description --></p>
     *
     */
    void doAction() {
        // We really can only eject VCRs (i.e. RS422)
        Optional.ofNullable(videoControllerProperty().get())
                .ifPresent(vc -> vc.send(RS422VideoCommands.EJECT));
    }

    @Override
    void onNext(VideoState videoState) {
        // Do nothing
    }
}
